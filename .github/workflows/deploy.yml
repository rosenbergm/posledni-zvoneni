name: Build & Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  MIX_ENV: prod
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}

jobs:
  build:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          version: latest
          buildkitd-flags: --debug

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          tags: |
            ghcr.io/rosenbergm/posledni-zvoneni/pz:latest
            ghcr.io/rosenbergm/posledni-zvoneni/pz:${{ github.sha }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            MIX_ENV=${{ env.MIX_ENV }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Push to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: root
          key: ${{ secrets.KEY }}
          script: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login -u ${{ github.actor }} --password-stdin ghcr.io
            docker stop posledni-zvoneni
            docker rm -v posledni-zvoneni
            docker pull ghcr.io/rosenbergm/posledni-zvoneni/pz:${{ github.sha }}
            docker run -p "127.0.0.1:4000:4000/tcp" --privileged --name posledni-zvoneni -e "DATABASE_URL=${{ env.DATABASE_URL }}" -e "SECRET_KEY_BASE=${{ env.SECRET_KEY_BASE }}" -d ghcr.io/rosenbergm/posledni-zvoneni/pz:${{ github.sha }} || exit 1
            docker start posledni-zvoneni
            exit
